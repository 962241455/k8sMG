Started by user admin
Running in Durability level: MAX_SURVIVABILITY
[Pipeline] echo
qa-flask-demo02.yangmv.com
[Pipeline] echo
5000
[Pipeline] node
Still waiting to schedule task
Waiting for next available executor on ‘jnlp-9ghnk’
Agent jnlp-9ghnk is provisioned from template Kubernetes Pod Template
Agent specification [Kubernetes Pod Template] (haimaxy-jnlp): 
* [jnlp] harbor-k8s.shinezone.com/ops/jenkins:jnlp

Running on jnlp-9ghnk in /home/jenkins/workspace/flask-demo02
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone)
[Pipeline] echo
1.Clone 代码
[Pipeline] git
Cloning the remote Git repository
Cloning repository https://github.com/yangmv/flask-demo.git
 > git init /home/jenkins/workspace/flask-demo02 # timeout=10
Fetching upstream changes from https://github.com/yangmv/flask-demo.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/yangmv/flask-demo.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/yangmv/flask-demo.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/yangmv/flask-demo.git # timeout=10
Fetching upstream changes from https://github.com/yangmv/flask-demo.git
 > git fetch --tags --progress https://github.com/yangmv/flask-demo.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision 3b7d9c92c7ebf5a2e12917ec1137ca54116e9bf2 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 3b7d9c92c7ebf5a2e12917ec1137ca54116e9bf2
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master 3b7d9c92c7ebf5a2e12917ec1137ca54116e9bf2
Commit message: "edit"
 > git rev-list --no-walk 3b7d9c92c7ebf5a2e12917ec1137ca54116e9bf2 # timeout=10
[Pipeline] script
[Pipeline] {
[Pipeline] sh
[flask-demo02] Running shell script
+ git rev-parse --short HEAD
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] echo
2.代码测试[PAAS]
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] echo
3.构建打包 Docker 镜像
[Pipeline] sh
[flask-demo02] Running shell script
+ docker build -t harbor-k8s.shinezone.com/ops/flask-demo:3b7d9c9 .
Sending build context to Docker daemon  76.29kB
Step 1/5 : From python:3.6-alpine
 ---> a3184dc36856
Step 2/5 : ADD . /data1/www
 ---> 244323a8b656
Step 3/5 : WORKDIR /data1/www
 ---> Running in b219fba5a922
Removing intermediate container b219fba5a922
 ---> ddc38b11486f
Step 4/5 : RUN pip install flask
 ---> Running in 29275b797ecc
Collecting flask
  Downloading https://files.pythonhosted.org/packages/7f/e7/08578774ed4536d3242b14dacb4696386634607af824ea997202cd0edb4b/Flask-1.0.2-py2.py3-none-any.whl (91kB)
Collecting itsdangerous>=0.24 (from flask)
  Downloading https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl
Collecting click>=5.1 (from flask)
  Downloading https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl (81kB)
Collecting Jinja2>=2.10 (from flask)
  Downloading https://files.pythonhosted.org/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/Jinja2-2.10-py2.py3-none-any.whl (126kB)
Collecting Werkzeug>=0.14 (from flask)
  Downloading https://files.pythonhosted.org/packages/20/c4/12e3e56473e52375aa29c4764e70d1b8f3efa6682bef8d0aae04fe335243/Werkzeug-0.14.1-py2.py3-none-any.whl (322kB)
Collecting MarkupSafe>=0.23 (from Jinja2>=2.10->flask)
  Downloading https://files.pythonhosted.org/packages/ac/7e/1b4c2e05809a4414ebce0892fe1e32c14ace86ca7d50c70f00979ca9b3a3/MarkupSafe-1.1.0.tar.gz
Building wheels for collected packages: MarkupSafe
  Running setup.py bdist_wheel for MarkupSafe: started
  Running setup.py bdist_wheel for MarkupSafe: finished with status 'done'
  Stored in directory: /root/.cache/pip/wheels/81/23/64/51895ea52825dc116a55f37043f49be0939bcf603de54e5cde
Successfully built MarkupSafe
Installing collected packages: itsdangerous, click, MarkupSafe, Jinja2, Werkzeug, flask
Successfully installed Jinja2-2.10 MarkupSafe-1.1.0 Werkzeug-0.14.1 click-7.0 flask-1.0.2 itsdangerous-1.1.0
Removing intermediate container 29275b797ecc
 ---> 60307a6c4735
Step 5/5 : CMD ["python","app.py"]
 ---> Running in 6fdfe3006f96
Removing intermediate container 6fdfe3006f96
 ---> e5a135cf8927
Successfully built e5a135cf8927
Successfully tagged harbor-k8s.shinezone.com/ops/flask-demo:3b7d9c9
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push)
[Pipeline] echo
4.推送 Docker 镜像到仓库
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] sh
[flask-demo02] Running shell script
+ docker login -u **** -p **** https://harbor-k8s.shinezone.com
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
Login Succeeded
[Pipeline] sh
[flask-demo02] Running shell script
+ docker push harbor-k8s.shinezone.com/ops/flask-demo:3b7d9c9
The push refers to repository [harbor-k8s.shinezone.com/ops/flask-demo]
13981135b759: Preparing
86d23b7c1c11: Preparing
4a2596f9aa79: Preparing
5cf3066ccdbc: Preparing
76a1661c28fc: Preparing
beefb6beb20f: Preparing
df64d3292fd6: Preparing
beefb6beb20f: Waiting
df64d3292fd6: Waiting
76a1661c28fc: Layer already exists
4a2596f9aa79: Layer already exists
5cf3066ccdbc: Layer already exists
beefb6beb20f: Layer already exists
df64d3292fd6: Layer already exists
86d23b7c1c11: Pushed
13981135b759: Pushed
3b7d9c9: digest: sha256:b541666c0da4c811e6211bbfa5527e97e58667aee6314e5e9bcdaf6ca31148ed size: 1788
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (YAML)
[Pipeline] echo
5.YAML配置
[Pipeline] sh
[flask-demo02] Running shell script
+ sed -i s/<BUILD_TAG>/3b7d9c9/ flask-demo-deploy.yaml
[Pipeline] sh
[flask-demo02] Running shell script
+ sed -i s/<PORT>/5000/ flask-demo-deploy.yaml
[Pipeline] sh
[flask-demo02] Running shell script
+ sed -i s/<PORT>/5000/ flask-demo-ingress.yaml
[Pipeline] sh
[flask-demo02] Running shell script
+ sed -i s/<DOMAIN>/qa-flask-demo02.yangmv.com/ flask-demo-ingress.yaml
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] echo
6.开始部署
[Pipeline] sh
[flask-demo02] Running shell script
+ kubectl apply -f flask-demo-deploy.yaml -n dev
deployment "flask-demo" configured
service "flask-demo" unchanged
[Pipeline] sh
[flask-demo02] Running shell script
+ kubectl apply -f flask-demo-ingress.yaml -n dev
ingress "flask-demo-ingress" configured
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
